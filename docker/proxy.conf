# ココチャピ・タロット リバースプロキシ設定
# 複数インスタンス・ロードバランシング用

# ========================================
# アップストリーム設定
# ========================================
upstream kokochapi_backend {
    # ロードバランシング方式: least_conn（最少接続数）
    least_conn;
    
    # バックエンドサーバー
    server kokochapi-tarot:80 max_fails=3 fail_timeout=30s;
    
    # 複数インスタンス対応（必要に応じてコメントアウト）
    # server kokochapi-tarot-2:80 max_fails=3 fail_timeout=30s;
    # server kokochapi-tarot-3:80 max_fails=3 fail_timeout=30s;
    
    # ヘルスチェック（NGINX Plus）
    # health_check;
    
    # セッション永続化（必要に応じて）
    # ip_hash;
}

# ========================================
# メインサーバー設定
# ========================================
server {
    listen 80;
    server_name localhost;
    
    # ========================================
    # ロギング設定
    # ========================================
    access_log /var/log/nginx/proxy_access.log;
    error_log /var/log/nginx/proxy_error.log warn;

    # ========================================
    # プロキシ基本設定
    # ========================================
    location / {
        proxy_pass http://kokochapi_backend;
        
        # プロキシヘッダー設定
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # タイムアウト設定
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # バッファリング設定
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        
        # エラー処理
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 30s;
    }
    
    # ========================================
    # ヘルスチェック用エンドポイント
    # ========================================
    location /proxy-health {
        access_log off;
        return 200 "proxy-healthy\n";
        add_header Content-Type text/plain;
    }
    
    # バックエンドヘルスチェックの中継
    location /health {
        proxy_pass http://kokochapi_backend/health;
        proxy_set_header Host $host;
        access_log off;
    }

    # ========================================
    # 静的ファイルキャッシュ
    # ========================================
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://kokochapi_backend;
        proxy_set_header Host $host;
        
        # キャッシュ設定
        proxy_cache_valid 200 1d;
        proxy_cache_valid 404 1m;
        add_header X-Cache-Status $upstream_cache_status;
        
        # 静的ファイル用ヘッダー
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # ========================================
    # WebSocket対応（将来の機能拡張用）
    # ========================================
    location /ws {
        proxy_pass http://kokochapi_backend;
        
        # WebSocket用ヘッダー
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket用タイムアウト
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
    }

    # ========================================
    # セキュリティ設定
    # ========================================
    
    # 管理用エンドポイントへのアクセス制限
    location /admin {
        # 内部ネットワークのみ許可
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        allow 10.0.0.0/8;
        deny all;
        
        proxy_pass http://kokochapi_backend;
        proxy_set_header Host $host;
    }
    
    # サーバー情報の隠蔽
    server_tokens off;
}